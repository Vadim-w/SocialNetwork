{"version":3,"sources":["Components/Dialogs/Dialogs.module.css","Components/Dialogs/DialogItem/DialogsItem.tsx","Components/Dialogs/Message/Message.tsx","Components/Dialogs/Dialogs.tsx","Components/Dialogs/DialogsContainer.tsx"],"names":["module","exports","DialogItem","props","className","s","dialog","active","to","id","name","Message","message","maxLength50","naxLength","MessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","validate","requiredField","component","Textarea","compose","connect","state","dialogs","dialogsPage","messages","dispatch","addDialog","value","addDialogActionCreator","WithAuthRedirect","messagesElements","map","m","key","dialogElements","d","dialogsItems"],"mappings":"qGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,4B,+FCmB/HC,EAR8B,SAACC,GAC1C,OACI,yBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,QAC/B,kBAAC,IAAD,CAASC,GAAI,YAAcL,EAAMM,IAAKN,EAAMO,QCEzCC,EATwB,SAACR,GACpC,OACI,yBAAKC,UAAWC,IAAEC,QAASH,EAAMS,U,iCCiCnCC,EAAcC,YAAU,IAYxBC,EAAmBC,YAA8B,CAACC,KAAM,UAArCD,EAV+C,SAACb,GAErE,OACI,0BAAMe,SAAUf,EAAMgB,cAClB,kBAACC,EAAA,EAAD,CAAOC,YAAa,UAAWC,SAAU,CAACC,IAAeV,GAAcH,KAAM,SAAUc,UAAWC,MAClG,4C,uBC3BGC,sBACXC,aAfkB,SAACC,GACnB,MAAO,CACHC,QAASD,EAAME,YAAYD,QAC3BE,SAAUH,EAAME,YAAYC,aAGX,SAACC,GACvB,MAAO,CACHC,UAAW,SAACC,GACRF,EAASG,YAAuBD,SAOvCE,IAFWV,EDDoC,SAACvB,GAEhD,IAAIkC,EAAmBlC,EAAM4B,SAASO,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAS3B,QAAS2B,EAAE3B,QAAS4B,IAAKD,EAAE9B,QAC/EgC,EAAiBtC,EAAM0B,QAAQS,KAAI,SAAAI,GAAC,OAAI,kBAAC,EAAD,CAAYhC,KAAMgC,EAAEhC,KAAMD,GAAIiC,EAAEjC,GAAI+B,IAAKE,EAAEjC,QAKvF,OACI,yBAAKL,UAAWC,IAAEwB,SACd,yBAAKzB,UAAWC,IAAEsC,cACbF,GAEL,yBAAKrC,UAAWC,IAAE0B,UACbM,GAEL,kBAACtB,EAAD,CAAkBG,SAZT,SAACgB,GACd/B,EAAM8B,UAAUC,EAAM5B","file":"static/js/4.f18b292d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2Iiz0\",\"dialogsItems\":\"Dialogs_dialogsItems__1gvvY\",\"active\":\"Dialogs_active__2pVBP\",\"messages\":\"Dialogs_messages__3DMps\"};","import React from 'react';\r\nimport s from '../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\n\r\ntype DialogItemType = {\r\n    name: string\r\n    id: string\r\n\r\n}\r\n\r\nconst DialogItem: React.FC<DialogItemType> = (props) => {\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from '../Dialogs.module.css'\r\n\r\n\r\ntype MessageType = {\r\n    message: string\r\n}\r\n\r\nconst Message: React.FC<MessageType> = (props) => {\r\n    return (\r\n        <div className={s.dialog}>{props.message}</div>\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from './DialogItem/DialogsItem';\r\nimport Message from './Message/Message';\r\nimport {InjectedFormProps, Field, reduxForm} from \"redux-form\";\r\nimport {dialogsType, messagesType} from \"../../Redux/dialogs-reducer\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {naxLength, requiredField} from \"../../utils/validators/Validators\";\r\n\r\ntype dialogsPropsType = {\r\n    dialogs: Array<dialogsType>\r\n    messages: Array<messagesType>\r\n    newDialogText: string\r\n    isAuth: boolean\r\n    updateNewDialogText: (value: string) => void\r\n    addDialog: (value: string) => void\r\n}\r\n\r\ntype dialogFormDataType = {\r\n    dialog: string\r\n}\r\n\r\nexport const Dialogs: React.FC<dialogsPropsType> = (props) => {\r\n\r\n    let messagesElements = props.messages.map(m => <Message message={m.message} key={m.id}/>)\r\n    let dialogElements = props.dialogs.map(d => <DialogItem name={d.name} id={d.id} key={d.id}/>)\r\n    const onSubmit = (value: dialogFormDataType) => {\r\n        props.addDialog(value.dialog)\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messagesElements}\r\n            </div>\r\n            <MessageReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst maxLength50 = naxLength(50)\r\n\r\nconst AddMessageForm: React.FC<InjectedFormProps<dialogFormDataType>> = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field placeholder={\"message\"} validate={[requiredField, maxLength50]} name={\"dialog\"} component={Textarea}/>\r\n            <button>Send</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst MessageReduxForm = reduxForm<dialogFormDataType>({form: \"dialog\"}) (AddMessageForm)\r\n\r\n\r\n\r\n","import {ActionsTypes, addDialogActionCreator} from '../../Redux/dialogs-reducer';\r\nimport {Dialogs} from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {RootStateType} from \"../../Redux/redux-store\";\r\nimport {WithAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state: RootStateType) => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        messages: state.dialogsPage.messages,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch: (action: ActionsTypes) => void) => {\r\n   return {\r\n       addDialog: (value: string) => {\r\n           dispatch(addDialogActionCreator(value))\r\n       }\r\n   }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect (mapStateToProps, mapDispatchToProps),\r\n    WithAuthRedirect\r\n)(Dialogs)\r\n\r\n\r\n"],"sourceRoot":""}